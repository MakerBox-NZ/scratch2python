--- 011.py	2017-08-16 20:35:33.280207111 +1200
+++ 012.py	2017-09-03 22:20:13.053550121 +1200
@@ -11,6 +11,7 @@
 # add auto enemy
 # add onscreen text
 # fix multiple hits from enemy
+# added throwing mechanic
 
 # GNU All-Permissive License
 # Copying and distribution of this file, with or without modification,
@@ -52,6 +53,40 @@
             self.counter = 0
 
         self.counter += 1
+
+    def update(self,firepower, enemies):
+        '''
+        detect firepower collision
+        '''
+        fire_hit_list = pygame.sprite.spritecollide(self, firepower, False)
+        for fire in fire_hit_list:
+            enemies.remove(self)
+        
+
+class Throwable(pygame.sprite.Sprite):
+    '''
+    Spawn a throwable object
+    '''
+    def __init__(self,x,y,img):
+        pygame.sprite.Sprite.__init__(self)
+        self.image = pygame.image.load(os.path.join('images',img))
+        self.image.convert_alpha()
+        self.image.set_colorkey(alpha)
+        self.rect    = self.image.get_rect()
+        self.rect.x  = x
+        self.rect.y  = y
+        self.firing  = 1
+        
+    def update(self,screenY):
+        '''
+        throw physics
+        '''
+        if self.rect.y < screenY:
+            self.rect.x  += 15
+            self.rect.y  += 5
+        else:
+            self.kill()
+            self.firing = 0
             
 class Platform(pygame.sprite.Sprite):
     '''
@@ -206,7 +241,7 @@
     screen.blit(text_score, (4, 4))
     screen.blit(text_health, (4, 72))
 
-    
+
 '''
 Setup
 '''
@@ -233,10 +268,12 @@
 player.rect.y = 0
 movingsprites = pygame.sprite.Group()
 movingsprites.add(player)
+fire = Throwable(player.rect.x,player.rect.y,'fire.png')
 
 enemy   = Enemy(777,531,'owl.png')  # spawn enemy
 enemies = pygame.sprite.Group()
 enemies.add(enemy)
+firepower = pygame.sprite.Group()
 
 movesteps = 10      # how fast to move
 forwardX  = 600     # when to scroll
@@ -262,12 +299,18 @@
                 player.control(movesteps,0)
             if event.key == pygame.K_UP or event.key == ord('w'):
                 player.jump(platform_list)
+            if event.key == pygame.K_SPACE:
+                if not fire.firing:
+                    fire = Throwable(player.rect.x,player.rect.y,'fire.png')
+                    firepower.add(fire)
 
         if event.type == pygame.KEYUP:
             if event.key == pygame.K_LEFT or event.key == ord('a'):
                 player.control(movesteps,0)
             if event.key == pygame.K_RIGHT or event.key == ord('d'):
                 player.control(-movesteps,0)
+            if event.key == pygame.K_SPACE:
+                print(fire.firing)
             if event.key == ord('q'):
                 pygame.quit()
                 sys.exit()
@@ -302,6 +345,10 @@
     player.gravity()             # check gravity
     player.update(platform_list,loot_list) # refresh player
     enemy.move()
+    if fire.firing:
+        fire.update(screenY)
+        firepower.draw(screen)
+        enemies.update(firepower,enemies)
     movingsprites.draw(screen)   # refresh player position
     enemies.draw(screen)
     stats(player.score,player.health)
