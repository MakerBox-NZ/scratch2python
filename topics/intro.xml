<chapter id="intro">
  <title>
    Intro to Python
  </title>

  <para>
    Python is an all-purpose programming language. It can be used to
    create desktop applications, 3d graphics, video games, and even
    websites. It's a good language to learn because it's simpler than
    complex languages like C, C++, or Java, but is powerful and
    robust, and is used in just about every industry that uses computers.
  </para>

  <para>
    Unlike Scratch, Python doesn't have a GUI. You have to type code
    into a text editor, save the file, and then run it with the Python
    interpreter.
  </para>

<mediaobject>
  <info>
    <othercredit>
      <orgname>MakerBox</orgname>
    </othercredit>
    <othercredit>
      <orgname>MIT</orgname>
    </othercredit>
  </info>
  <alt>Scratch and Python</alt>
  <imageobject>
    <imagedata align="left" format="JPG"
	       fileref="topics/images/scratchLikePython.jpg"/>
  </imageobject>
  <textobject>
    <para>
    The Scratch interface is like Python. The Scratch scripts you
    make with Scratch blocks are like Python code.      
    </para>
  </textobject>
</mediaobject>

<section id="intro_install">
  <title>
    Installing Python
  </title>

  <para>
    Before learning Python, you may need to install it.
  </para>

  <bridgehead>
    Linux
  </bridgehead>
  
      <para>
	If you use <ulink
	url="https://software.opensuse.org/distributions/leap">Linux</ulink>,
	Python is already included, but make sure that you have
	<code>Python 3</code>, specifically. To check what version you
	have installed, open a terminal window and type&#58;
      </para>

      <code>
	python3 -V
      </code>

      <para>
	If that command is not found, then <ulink
	url="https://software.opensuse.org/package/python3-base">install
	Python 3</ulink> from your package manager.
      </para>

  <bridgehead>
    Mac OS
  </bridgehead>

  <para>
    Follow the instructions for Linux, above. Macintosh does not have
    an inbuilt package manager, so if Python 3 is not found, install
    it from <ulink
    url="https://www.python.org/downloads/mac-osx/">python.org&#47;downloads&#47;mac-osx</ulink>.
  </para>

  <warning>
  <para>
    Mac OS does have Python 2 installed, but you should learn Python 3.
  </para>
  </warning>
  
  <bridgehead>
    Windows
  </bridgehead>

  <para>
    At the time of this writing, Microsoft Windows doesn&#39;t yet
    ship with Python. Install it from <ulink
    url="https://www.python.org/downloads/windows">python.org&#47;downloads&#47;windows</ulink>. Be
    sure to select <guilabel>Add Python to PATH</guilabel> in the
    install wizard.
  </para>
</section>

<section id="intro_ide">
  <title>Running an IDE</title>

  <para>
    To write programmes in the Python language, all you really need is
    a text editor, but it&#39;s convenient to have what&#39;s called
    an IDE, or an <emphasis>Integrated Development
    Environment</emphasis>. An IDE integrates a text editor with some
    friendly and helpful Python features.
  </para>

  <bridgehead>IDLE 3</bridgehead>
  
  <para>
    Python comes with a basic IDE called
    <application>IDLE</application>. It has keyword highlighting to
    help detect typos and a <guibutton>Run</guibutton> button to quickly
    and easily test code.
  </para>

  <itemizedlist>
    <title>Launching IDLE</title>
    
    <listitem>
      <para>
	On Linux or Mac OS, launch a terminal window and type
	<command>idle3</command>
      </para>
    </listitem>

    <listitem>
      <para>
	On Windows, launch Python 3 from the Start menu.
      </para>
      <para>
	If there is no Python in the Start menu, launch the Windows
	command prompt, called <application>cmd</application> in your
	start menu, and type <command>C&#58;\Windows\py.exe</command>
      </para>

      <para>
	If that doesn&#39;t work, try reinstalling Python. Be sure to
	select <guilabel>Add Python to PATH</guilabel> in the install
	wizard. Refer to <ulink
	url="https://docs.python.org/3/using/windows.html">docs.python.org/3/using/windows.html</ulink>
	for detailed instructions.
      </para>
      <para>
	If that doesn&#39;t work, make sure you have Python installed,
	or just use <ulink
	url="https://software.opensuse.org/distributions/leap">Linux</ulink>. It's
	free and, as long as you save your Python files to a USB
	thumbdrive, doesn&#39;t even require you to install it to use it.
      </para>
    </listitem>
  </itemizedlist>


  <bridgehead>Ninja-IDE</bridgehead>
  
  <para>
    An excellent Python IDE is <ulink
    url="http://ninja-ide.org/">Ninja-IDE</ulink>. It has keyword
    highlighting to help detect typos, quotation and parenthesis
    completion to avoid syntax errors, line numbers &#40;helpful when
    debugging&#41;, indentation markers, and a
    <guibutton>Run</guibutton> button to quickly and easily test code.
  </para>

  <orderedlist>
    <title>Using Ninja-IDE</title>
    
    <listitem>
      <para>
	Install <ulink url="http://ninja-ide.org/">Ninja-IDE</ulink>
	by downloading its installer from the web site. If you&#39;re
	using Linux, it&#39;s easier to just use your package manager.
      </para>
    </listitem>

    <listitem>
      <para>
	Launch Ninja-IDE.
      </para>
    </listitem>

    <listitem>
      <para>
	Go to the <guimenu>Edit</guimenu> menu and select
	<guimenuitem>Preferences</guimenuitem>.
      </para>

      <para>
	In the <guilabel>Preferences</guilabel> window, click the
	<guilabel>Execution</guilabel> tab.
      </para>

      <para>
	In the <guilabel>Execution</guilabel> tab, change
	<code>python</code> to <code>python3</code>.
      </para>

      <mediaobject>
	<info>
	  <othercredit>
	    <orgname>MakerBox</orgname>
	  </othercredit>
	  <othercredit>
	    <orgname>MIT</orgname>
	  </othercredit>
	</info>
	<alt>Python3 in Ninja-IDE</alt>
	<imageobject>
	  <imagedata align="left" format="PNG"
		     fileref="topics/images/ninja.png"/>
	</imageobject>
	<textobject>
	  <para>
	    Set Ninja-IDE to use Python3.
	  </para>
	</textobject>
      </mediaobject>
    </listitem>

    <para>
      Click the <guibutton>Save</guibutton> button to commit your
      changes.
    </para>    
  </orderedlist>
</section>

<section id="intro_python-commands">
  <title>
    Telling Python what to do
  </title>

  <para>
    Just like Scratch has code blocks, Python has keywords that tell
    Python what you want it to do.
  </para>

  <para>
    In either IDLE or Ninja, go to the <guimenu>File</guimenu> menu
    and create a new file. Ninja users&#58; do not create a new
    project, just a new file.
  </para>
  
  <para>
    In your new, empty file, type this into IDLE or Ninja&#58;
  </para>

<programlisting><![CDATA[
print("Hello world.")
]]></programlisting>

<itemizedlist>
  <listitem>
    <para>
      If you are using IDLE, go to the <guimenu>Run</guimenu> menu and
      select <guimenu>Run module</guimenu> option.
    </para>
  </listitem>
  <listitem>
    <para>
      If you are using Ninja, click the <guibutton>Run file</guibutton>
      button in the left button bar.
    </para>
  </listitem>
</itemizedlist>

<mediaobject>
  <info>
    <othercredit>
      <orgname>MakerBox</orgname>
    </othercredit>
    <othercredit>
      <orgname>MIT</orgname>
    </othercredit>
  </info>
  <alt>Run file in Ninja.</alt>
  <imageobject>
    <imagedata align="left" format="PNG"
	       fileref="topics/images/ninja_run.png"/>
  </imageobject>
  <textobject>
    <para>
      Running a file in Ninja.
    </para>
  </textobject>
</mediaobject>

<para>
  The keyword <command>print</command> tells Python to print out
  whatever text you give it in parentheses and quotes.
</para>

<para>
  That&#39;s not very exciting, though. Unlike Scratch, which has
  at least a hundred code blocks ready to use, Python only
  has access to some basic keywords, like <command>print</command>,
  <command>help</command>, and so on.
</para>

<para>
  Use the <command>import</command> keyword to load more
  keywords. Start a new file in IDLE or Ninja and name it
  <filename>pen.py</filename>.
</para>

    <warning>
      <para>
	Do not call your file <filename>turtle.py</filename>, because
	<filename>turtle.py</filename> is the name of the file that
	contains the turtle programme that you are controlling. Naming
	your file <filename>turtle.py</filename> will confuse Python,
	because it will think that you want to <code>import</code>
	your own file.
      </para>
    </warning>

<para>
  Type this code into your file, and then run it&#58;
</para>

<programlisting><![CDATA[
import turtle
]]></programlisting>

  <para>
    Turtle is a fun module to use. It&#39;s a lot like the Pen code
    blocks in Scratch. Try this&#58;
  </para>

<programlisting><![CDATA[
turtle.begin_fill()
turtle.forward(100)
turtle.left(90)
turtle.forward(100)
turtle.left(90)
turtle.forward(100)
turtle.left(90)
turtle.forward(100)
turtle.end_fill()
]]></programlisting>

<para>
  See what shapes you can draw with the turtle module.
</para>

<para>
  To clear your turtle drawing area, use the
  <command>turtle.clear&#40;&#41;</command> keyword.
</para>

<para>
  What do you think the keyword
  <command>turtle.color&#40;&#34;blue&#34;&#41;</command> does?
</para>

<para>
  Try some more complex code&#58;
</para>

<programlisting><![CDATA[
import turtle as t
import time

t.color("blue")
t.begin_fill()

counter=0

while counter < 4:
    t.forward(100)
    t.left(90)
    counter = counter+1

t.end_fill()
time.sleep(5)
]]></programlisting>
    
    <para>
      Once you have run your script, it&#39;s time to explore an even
      better module. One popular module used to create video games with Python
      is called PyGame. It&#39;s got a lot more features than turtle,
      but is also a lot more complex, so be prepared.
    </para>
  </section>
</chapter>