<chapter id="sound">
  <title>Adding sound</title>

  <para>
    Pygame provides an easy way to integrate sounds into your
    game. The <code>mixer</code> module of Pygame is capable of
    playing one ore more sounds on command, and mix those sounds
    together as needed so that you can have, for instance, background
    music at the same time as the sounds of your hero collecting loot
    or jumping over enemies.
  </para>

  <para>
    The mixer module is easy to integrate into an existing game, so rather than giving you code samples showing you exactly where to put code, this chapter is an overview to the four steps required to get sound in your application.
  </para>

  <section id="sound-init">
    <title>Start the mixer</title>
    "
      <para>
	First, in your SETUP section, start the mixer process. Your code already starts Pygame itself and Pygame fonts, so grouping it together with these is a good idea.
      </para>

<programlisting><![CDATA[
pygame.init()
pygame.font.init()
pygame.mixer.init() # add this line
main = True
]]></programlisting>

  </section>

  <section id="sound-def">
    <title>Defining the sounds</title>
    
<para>
  Next, you must define the sounds you want to use. This, of course, requires you to actually have sounds on your computer, just as using fonts requires you to have fonts, and using graphics requires you to have graphics.
</para>

<para>
  You also must bundle those sounds along with your game so that anyone playing your game also has the sound files.
</para>

    <para>
      To bundle a sound with your game, first create a new directory in
      your game folder, right along with the directory you created for
      your images and fonts. Call it <filename>sound</filename>.
    </para>

<programlisting><![CDATA[
SOUND = os.path.join('sound')
]]></programlisting>

    <para>
      Even though there are plenty of sounds on the internet, it's not
      necessarily <emphasis>legal</emphasis> to download them and then
      give them away with your game. It seems strange, because so many
      sounds from famous video games are such a part of popular
      culture, but that's how the law works. If you want to ship a
      sound with your game, you must find an open source or Creative
      Commons sound that gives you permission to give the sound away
      along with your game.
    </para>

    <para>
      There are several sites that specialise in free and legal
      sounds&#58;
    </para>

    <itemizedlist>
      <listitem><para>
	<ulink url="https://freesound.org/">freesound.org</ulink> hosts sound effects of all sorts.
      </para></listitem>
      <listitem><para>
	<ulink url="http://incompetech.com/music/royalty-free/">Incompetech.com</ulink> hosts background music.
      </para></listitem>
      <listitem><para>
	<ulink url="https://opengameart.org/art-search-advanced?keys=&field_art_type_tid[]=13&sort_by=count&sort_order=DESC">Open Game Art</ulink> hosts sound effects and music.
      </para></listitem>
    </itemizedlist>

    <para>
      Some sound files are free to use <emphasis>only</emphasis> if you give the composer or sound designer credit. Read the conditions of use carefully before bundling with your game&#33; Musicians and sound designers work just as hard on their sounds as you work on your code, so it&#39;s nice to give them credit even when they don&#39;t require it.
    </para>

    <para>
      To give your sound sources credit, list the sounds that you use
      in a text file called <filename>CREDIT</filename>, and place the
      text file in your game folder.
    </para>
    
    <para>
      When you find a sound that you like, download it. If it comes in
      a ZIP or tar file, extract it and move the sounds into the
      <filename>sound</filename> folder in your game directory.
    </para>

    <para>
      If the sound file has a complicated name with spaces or special
      characters, rename it. The filename is completely
      arbitrary, and the simpler it is, the easier it is for you to
      type into your code.
    </para>

    <note>
      <para>
	Most video games use <filename>.ogg</filename> &#40;Ogg
	Vorbis&#41; sound files because it provides high quality in
	small file sizes. When you download a sound file, it might be
	an MP3, or WAVE, FLAC, or any one of several audio formats. To
	keep your compatibility high and your download size low,
	convert these to Ogg Vorbis with a tool like <ulink
	url="https://www.freac.org/index.php/en/downloads-mainmenu-33">fre&#58;ac</ulink>
	or <ulink url="http://getmiro.com/">Miro</ulink>.
      </para>
    </note>

    <para>
      For the purpose of this example, assume you have downloaded a sound file called <filename>zap.ogg</filename>.
    </para>

    <para>
      In your SETUP section, create a variable representing the sound file you want to use&#58;
    </para>

<programlisting><![CDATA[
OUCH = pygame.mixer.Sound(SOUND + 'ouch.ogg')
]]></programlisting>

  </section>

  <section id="sound-trigger">
    <title>Triggering a sound</title>
  
    <para>
      To use a sound, all you have to do is call the variable when you want to trigger it. For instance, to trigger the <varname>OUCH</varname> sound effect when your player hits an enemy&#58;
    </para>
  
<programlisting><![CDATA[
for enemy in enemy_hit_list:
    OUCH
    score -= 1
]]></programlisting>

<para>
  You can create sounds for all kinds of actions, such as jumping, collecting loot, throwing, colliding, and whatever else you can imagine.
</para>

  </section>
</chapter>
